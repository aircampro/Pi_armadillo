import numpy as np

class BaseController:
    def update(self, target_val, current_val, state, future_plan):
        raise NotImplementedError

class Controller(BaseController):
    def __init__(self, p=0.3, i=0.05, d=-0.1, o=0.0):
        self.p = p 
        self.i = i
        self.d = d 
        self.error_integral = 0
        self.prev_error = 0
        self.out = o

    def clamp(self, inval, maxv, minv):
        if inval > maxv:
            inval = maxv
        elif inval < minv:
            inval = minv
        return inval

    def update(self, target_val, current_val, minv=0, maxv=4096):
        error = (target_val - current_val)
        self.error_integral += error
        error_diff = error - self.prev_error
        self.prev_error = error
        self.out = self.clamp(self.p * error + self.i * self.error_integral + self.d * error_diff, maxv, minv)
        return self.out

    def hold(self):
        return self.out

    def reset(self):
        self.error_integral = 0
        self.prev_error = 0
        self.out = 0.0
        return self.out
		
    def ramp_up(self,rv, maxv):
        self.out += rv
        if self.out > maxv:
            self.out = maxv
        return self.out	

    def ramp_down(self,rv, minv):
        self.out += rv
        if self.out < minv:
            self.out = minv
        return self.out	
